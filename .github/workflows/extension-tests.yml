name: Extension Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/extension/**'
      - 'packages/**'
      - 'libs/**'
      - '.github/workflows/extension-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/extension/**'
      - 'packages/**'
      - 'libs/**'
      - '.github/workflows/extension-tests.yml'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
        
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18
        
    - name: Install dependencies
      run: bun install
    
    - name: Install Moon
      run: |
        curl -fsSL https://moonrepo.dev/install/moon.sh | bash
        echo "$HOME/.moon/bin" >> $GITHUB_PATH
        
    - name: Build packages
      run: moon run :build
        
    - name: Run server tests
      working-directory: apps/extension
      run: bun run test:server
      
    - name: Run client unit tests
      working-directory: apps/extension
      run: bun run test:client

  integration-tests:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        vscode-version: [stable, insiders]
        
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18
        
    - name: Install dependencies
      run: bun install
        
    - name: Build extension
      working-directory: apps/extension
      run: bun run compile
      
    - name: Run integration tests (Linux)
      if: runner.os == 'Linux'
      working-directory: apps/extension
      run: |
        export DISPLAY=:99.0
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        nr test:integration
      env:
        VSCODE_VERSION: ${{ matrix.vscode-version }}
        
    - name: Run integration tests (non-Linux)
      if: runner.os != 'Linux'
      working-directory: apps/extension
      run: bun run test:integration
      env:
        VSCODE_VERSION: ${{ matrix.vscode-version }}

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18
      
    - name: Install dependencies
      run: bun install
      
    - name: Build extension
      working-directory: apps/extension
      run: bun run compile
      
    - name: Run E2E tests
      working-directory: apps/extension
      run: |
        export DISPLAY=:99.0
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        nr test:e2e
      
    - name: Run Coffee Shop example tests
      working-directory: apps/extension
      run: |
        export DISPLAY=:99.0
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        nr test:e2e:coffee-shop
      
    - name: Upload test screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-screenshots
        path: apps/extension/tests/screenshots/

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18
      
    - name: Install dependencies
      run: bun install
      
    - name: Build extension
      working-directory: apps/extension
      run: bun run compile
      
    - name: Run visual tests
      working-directory: apps/extension
      run: |
        export DISPLAY=:99.0
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        nr test:visual
      
    - name: Upload visual diffs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: visual-diffs
        path: apps/extension/tests/__image_snapshots__/__diff_output__/
      
    - name: Upload snapshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: visual-snapshots
        path: apps/extension/tests/__image_snapshots__/

  test-summary:
    name: Test Summary
    needs: [unit-tests, integration-tests, e2e-tests, visual-regression]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.unit-tests.result }}" != "success" ] || \
             [ "${{ needs.integration-tests.result }}" != "success" ] || \
             [ "${{ needs.e2e-tests.result }}" != "success" ]; then
            echo "❌ Tests failed!"
            exit 1
          else
            echo "✅ All tests passed!"
          fi
      
      - name: Create summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Visual Tests | ${{ needs.visual-regression.result == 'success' && '✅' || '⚠️' }} |" >> $GITHUB_STEP_SUMMARY